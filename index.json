{
  "api/index.html": {
    "href": "api/index.html",
    "title": "PLACEHOLDER | Gaze Interaction System",
    "keywords": "PLACEHOLDER TODO: Add .NET projects to the src folder and run docfx to generate REAL API Documentation!"
  },
  "api/TS.GazeInteraction.GazeInteractable.html": {
    "href": "api/TS.GazeInteraction.GazeInteractable.html",
    "title": "Class GazeInteractable | Gaze Interaction System",
    "keywords": "Class GazeInteractable Represents an interactable object that responds to gaze-based interactions. Inheritance System.Object GazeInteractable Namespace: TS.GazeInteraction Assembly: .dll Syntax public class GazeInteractable : MonoBehaviour Fields | Improve this Doc View Source OnGazeActivated Declaration public UnityEvent OnGazeActivated Field Value Type Description UnityEvent | Improve this Doc View Source OnGazeEnter Declaration public UnityEvent OnGazeEnter Field Value Type Description UnityEvent | Improve this Doc View Source OnGazeExit Declaration public UnityEvent OnGazeExit Field Value Type Description UnityEvent | Improve this Doc View Source OnGazeStay Declaration public UnityEvent OnGazeStay Field Value Type Description UnityEvent | Improve this Doc View Source OnGazeToggle Declaration public UnityEvent<bool> OnGazeToggle Field Value Type Description UnityEvent<bool> Properties | Improve this Doc View Source IsActivable Indicates whether the interactable is activable. Declaration public bool IsActivable { get; } Property Value Type Description bool | Improve this Doc View Source IsActivated Indicates whether the interactable is currenlty activated. Declaration public bool IsActivated { get; } Property Value Type Description bool | Improve this Doc View Source IsEnabled Indicates whether the interactable is enabled. Declaration public bool IsEnabled { get; set; } Property Value Type Description bool Methods | Improve this Doc View Source Activate() Activates the interactable and invokes the activated event. Declaration public void Activate() | Improve this Doc View Source Enable(bool) Enables or disables the interactable game object. Declaration public void Enable(bool enable) Parameters Type Name Description bool enable True to enable, false to disable. | Improve this Doc View Source GazeEnter(GazeInteractor, Vector3) Invokes the gaze enter event. Declaration public void GazeEnter(GazeInteractor interactor, Vector3 point) Parameters Type Name Description GazeInteractor interactor Vector3 point | Improve this Doc View Source GazeExit(GazeInteractor) Invokes the gaze exit event after the _exitDelay duration. Declaration public void GazeExit(GazeInteractor interactor) Parameters Type Name Description GazeInteractor interactor | Improve this Doc View Source GazeStay(GazeInteractor, Vector3) Invokes the gaze stay event. Declaration public void GazeStay(GazeInteractor interactor, Vector3 point) Parameters Type Name Description GazeInteractor interactor Vector3 point Events | Improve this Doc View Source Activated Event triggered when the interactable is activated. Declaration public event GazeInteractable.OnActivated Activated Event Type Type Description GazeInteractable.OnActivated | Improve this Doc View Source Enter Event triggered when the gaze enters the interactable. Declaration public event GazeInteractable.OnEnter Enter Event Type Type Description GazeInteractable.OnEnter | Improve this Doc View Source Exit Event triggered when the gaze exits the interactable. Declaration public event GazeInteractable.OnExit Exit Event Type Type Description GazeInteractable.OnExit | Improve this Doc View Source Stay Event triggered while the gaze remains on the interactable. Declaration public event GazeInteractable.OnStay Stay Event Type Type Description GazeInteractable.OnStay"
  },
  "api/TS.GazeInteraction.GazeInteractable.OnActivated.html": {
    "href": "api/TS.GazeInteraction.GazeInteractable.OnActivated.html",
    "title": "Delegate GazeInteractable.OnActivated | Gaze Interaction System",
    "keywords": "Delegate GazeInteractable.OnActivated Delegate for handling the activation event. Namespace: TS.GazeInteraction Assembly: .dll Syntax public delegate void GazeInteractable.OnActivated(GazeInteractable interactable) Parameters Type Name Description GazeInteractable interactable The interactable object."
  },
  "api/TS.GazeInteraction.GazeInteractable.OnEnter.html": {
    "href": "api/TS.GazeInteraction.GazeInteractable.OnEnter.html",
    "title": "Delegate GazeInteractable.OnEnter | Gaze Interaction System",
    "keywords": "Delegate GazeInteractable.OnEnter Delegate for handling the gaze enter event. Namespace: TS.GazeInteraction Assembly: .dll Syntax public delegate void GazeInteractable.OnEnter(GazeInteractable interactable, GazeInteractor interactor, Vector3 point) Parameters Type Name Description GazeInteractable interactable The interactable object. GazeInteractor interactor The gaze interactor. Vector3 point The point where the gaze entered."
  },
  "api/TS.GazeInteraction.GazeInteractable.OnExit.html": {
    "href": "api/TS.GazeInteraction.GazeInteractable.OnExit.html",
    "title": "Delegate GazeInteractable.OnExit | Gaze Interaction System",
    "keywords": "Delegate GazeInteractable.OnExit Delegate for handling the gaze exit event. Namespace: TS.GazeInteraction Assembly: .dll Syntax public delegate void GazeInteractable.OnExit(GazeInteractable interactable, GazeInteractor interactor) Parameters Type Name Description GazeInteractable interactable The interactable object. GazeInteractor interactor The gaze interactor."
  },
  "api/TS.GazeInteraction.GazeInteractable.OnStay.html": {
    "href": "api/TS.GazeInteraction.GazeInteractable.OnStay.html",
    "title": "Delegate GazeInteractable.OnStay | Gaze Interaction System",
    "keywords": "Delegate GazeInteractable.OnStay Delegate for handling the gaze stay event. Namespace: TS.GazeInteraction Assembly: .dll Syntax public delegate void GazeInteractable.OnStay(GazeInteractable interactable, GazeInteractor interactor, Vector3 point) Parameters Type Name Description GazeInteractable interactable The interactable object. GazeInteractor interactor The gaze interactor. Vector3 point The current gaze point."
  },
  "api/TS.GazeInteraction.GazeInteractor.html": {
    "href": "api/TS.GazeInteraction.GazeInteractor.html",
    "title": "Class GazeInteractor | Gaze Interaction System",
    "keywords": "Class GazeInteractor Manages gaze-based interactions with interactables. Inheritance System.Object GazeInteractor Namespace: TS.GazeInteraction Assembly: .dll Syntax public class GazeInteractor : MonoBehaviour"
  },
  "api/TS.GazeInteraction.GazeReticle.html": {
    "href": "api/TS.GazeInteraction.GazeReticle.html",
    "title": "Class GazeReticle | Gaze Interaction System",
    "keywords": "Class GazeReticle Visual representation of the point of interaction. Inheritance System.Object GazeReticle Namespace: TS.GazeInteraction Assembly: .dll Syntax public class GazeReticle : MonoBehaviour Methods | Improve this Doc View Source Enable(bool) Toggles the visibility of the reticle GameObject. Declaration public void Enable(bool enable) Parameters Type Name Description bool enable Whether to enable or disable the reticle. | Improve this Doc View Source SetInteractor(GazeInteractor) Assigns the GazeInteractor using this reticle. Declaration public void SetInteractor(GazeInteractor interactor) Parameters Type Name Description GazeInteractor interactor The GazeInteractor to associate with this reticle. | Improve this Doc View Source SetProgress(float) Updates the progress visual indicator. Declaration public void SetProgress(float progress) Parameters Type Name Description float progress The progress value (0 to 1) to display. | Improve this Doc View Source SetTarget(RaycastHit) Assigns the current hit point to adjust the reticle position and rotation. Declaration public void SetTarget(RaycastHit hit) Parameters Type Name Description RaycastHit hit The RaycastHit containing information about the hit point. | Improve this Doc View Source SetType(ReticleType) Sets the type of reticle (visible or invisible). Declaration public void SetType(ReticleType type) Parameters Type Name Description ReticleType type The desired reticle type."
  },
  "api/TS.GazeInteraction.html": {
    "href": "api/TS.GazeInteraction.html",
    "title": "Namespace TS.GazeInteraction | Gaze Interaction System",
    "keywords": "Namespace TS.GazeInteraction Classes GazeInteractable Represents an interactable object that responds to gaze-based interactions. GazeInteractor Manages gaze-based interactions with interactables. GazeReticle Visual representation of the point of interaction. ResourcesManager Loads assets from the Resources directory. Enums ReticleType Types of reticles (visual feedback) for gaze interactions. Delegates GazeInteractable.OnActivated Delegate for handling the activation event. GazeInteractable.OnEnter Delegate for handling the gaze enter event. GazeInteractable.OnExit Delegate for handling the gaze exit event. GazeInteractable.OnStay Delegate for handling the gaze stay event."
  },
  "api/TS.GazeInteraction.ResourcesManager.html": {
    "href": "api/TS.GazeInteraction.ResourcesManager.html",
    "title": "Class ResourcesManager | Gaze Interaction System",
    "keywords": "Class ResourcesManager Loads assets from the Resources directory. Inheritance System.Object ResourcesManager Namespace: TS.GazeInteraction Assembly: .dll Syntax public class ResourcesManager : MonoBehaviour Fields | Improve this Doc View Source FILE_PREFAB_RETICLE Declaration public const string FILE_PREFAB_RETICLE = \"gaze_reticle\" Field Value Type Description string Methods | Improve this Doc View Source GetPrefab(string) Loads and returns the asset specified in file from the Resources directory. Declaration public static GameObject GetPrefab(string file) Parameters Type Name Description string file Name of the asset to load. Use one of the constants. Returns Type Description GameObject Returns the loaded GameObject."
  },
  "api/TS.GazeInteraction.ReticleType.html": {
    "href": "api/TS.GazeInteraction.ReticleType.html",
    "title": "Enum ReticleType | Gaze Interaction System",
    "keywords": "Enum ReticleType Types of reticles (visual feedback) for gaze interactions. Namespace: TS.GazeInteraction Assembly: .dll Syntax public enum ReticleType Fields Name Description Default Visible only on detection. Invisible Always invisible. Visible Always visible."
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | Gaze Interaction System",
    "keywords": "Getting Started"
  },
  "index.html": {
    "href": "index.html",
    "title": "Unity Gaze Interaction System (UGIS) | Gaze Interaction System",
    "keywords": "Unity Gaze Interaction System (UGIS) The Unity Gaze Interaction System is a lightweight plugin that enables gaze interaction in Unity projects, working for both VR and non-VR projects without requiring additional packages. Inspired by the Unity XR Interaction Toolkit, this system utilizes an Interactor-Interactable approach for intuitive interaction design. Features Gaze Distance: Define minimum and maximum range for gaze interaction. Activation Time: Set dwell time required to activate objects with gaze. Raycast Filtering: Choose which object layers respond to gaze. Visual Feedback: Select the type of reticle displayed for user focus. Gaze Events: Trigger actions based on user gaze behavior (enter, stay, exit, activate, toggle). Helpful links Follow the Getting Started guide to get up and running. Explore the API Reference for more details. Modify the source code available on GitHub. Install directly from the Unity Asset Store. Get in touch with me at tomazsaraiva.com."
  }
}